{"version":3,"sources":["api.ts","store/projectStore.ts","RootStoreContext.tsx","components/project-list/index.tsx","hooks/useStores.ts","components/project/index.tsx","components/icon/icons/case.tsx","components/icon/icons/trash.tsx","components/icon/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["fetchProjects","a","process","fetch","json","response","console","error","ProjectStore","storageKey","fetched","projects","getLocalData","localValue","localStorage","getItem","JSON","parse","dehydrate","window","setItem","stringify","makeAutoObservable","this","observable","action","setProjects","deleteProject","updateProject","push","length","projectId","filtered","filter","id","payload","updatedInd","findIndex","RootStoreContext","createContext","projectsStore","RootStoreProvider","children","Provider","value","ProjectList","observer","useContext","trashProject","useEffect","className","map","project","index","ProjectHeader","backgroundImage","logo","title","style","src","alt","ProjectFooter","triggerDelete","onClick","name","Project","props","useState","editing","setEditing","industry","description","role","handleSaveChange","fieldName","e","target","textContent","onBlur","suppressContentEditableWarning","contentEditable","SvgComponent","fill","viewBox","xmlns","d","opacity","stroke","strokeLinecap","strokeWidth","Icon","El","case","Case","trash","Trash","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8dc4dee7.chunk.js","sourcesContent":["import { IProject } from \"./components/project/types\"\n\nexport const fetchProjects = async (): Promise<Array<IProject> | null> => {\n  try {\n    const apiUrl = process.env.REACT_APP_API_URL || \"\"\n    const response = await (await fetch(apiUrl)).json()\n    return response as Array<IProject>\n  } catch (error) {\n    console.error(error)\n    return null\n  }\n}\n","import { IProject } from \"../components/project/types\"\nimport { action, makeAutoObservable, observable } from \"mobx\"\nimport { fetchProjects } from \"../api\"\n\nexport interface IProjectStore {\n  fetched: boolean\n  storageKey: string\n  projects: Array<IProject>\n}\n\nexport class ProjectStore implements IProjectStore {\n  storageKey = process.env.REACT_APP_STORAGE_KEY || \"\"\n  fetched = false\n  projects: Array<IProject> = []\n\n  constructor() {\n    makeAutoObservable(this, {\n      projects: observable,\n      fetchProjects: action,\n      setProjects: action,\n      deleteProject: action,\n      updateProject: action,\n    })\n    this.projects = this.getLocalData()\n  }\n\n  getLocalData = () => {\n    const localValue = localStorage.getItem(this.storageKey)\n\n    if (localValue) return JSON.parse(localValue)\n\n    return []\n  }\n\n  dehydrate = () => {\n    window.localStorage.setItem(\n      `${this.storageKey}`,\n      JSON.stringify(this.projects)\n    )\n  }\n\n  @action setProjects = (projects: Array<IProject>): void => {\n    this.projects.push(...projects)\n    this.dehydrate()\n  }\n\n  @action fetchProjects = async (): Promise<void> => {\n    if (this.projects.length) return\n\n    const projects = await fetchProjects()\n\n    //add error handling??\n    if (projects === null) return\n\n    this.setProjects(projects)\n  }\n\n  @action deleteProject = (projectId: number): void => {\n    const filtered = this.projects.filter(({ id }) => id !== projectId)\n\n    this.projects = filtered\n    this.dehydrate()\n  }\n\n  @action updateProject = (payload: Partial<IProject>): void => {\n    const updatedInd = this.projects.findIndex(({ id }) => id === payload.id)\n\n    if (updatedInd >= 0) {\n      this.projects[updatedInd] = {\n        ...this.projects[updatedInd],\n        ...payload,\n      }\n      this.dehydrate()\n    }\n  }\n}\n","import React, { createContext } from \"react\"\nimport { ProjectStore } from \"./store\"\n\ntype IRootStoreContext = {\n  projectsStore: ProjectStore\n}\n\nexport const RootStoreContext = createContext<IRootStoreContext>(\n  {} as IRootStoreContext\n)\nconst projectsStore = new ProjectStore()\n\nexport const RootStoreProvider: React.FC<React.PropsWithChildren<{}>> = ({\n  children,\n}) => {\n  return (\n    <RootStoreContext.Provider value={{ projectsStore }}>\n      {children}\n    </RootStoreContext.Provider>\n  )\n}\n","import React, { useEffect } from \"react\"\nimport { observer } from \"mobx-react\"\nimport { useRootStore } from \"../../hooks\"\nimport { Project } from \"../\"\n\nexport const ProjectList: React.FC<{}> = observer(() => {\n  const { projectsStore } = useRootStore()\n  const { projects, deleteProject, updateProject } = projectsStore\n\n  const trashProject = (id: number) => {\n    deleteProject(id)\n  }\n\n  useEffect(() => {\n    projectsStore.fetchProjects()\n  }, [projectsStore])\n\n  return (\n    <>\n      {projects.length > 0 && (\n        <div className=\"projectList\">\n          {projects.map((project, index) => (\n            <Project\n              updateProject={updateProject}\n              trashProject={trashProject}\n              key={index}\n              {...project}\n            />\n          ))}\n        </div>\n      )}\n    </>\n  )\n})\n","import { useContext } from \"react\"\nimport { RootStoreContext } from \"../RootStoreContext\"\n\nexport const useRootStore = () => useContext(RootStoreContext)\n","import React, { useState } from \"react\"\nimport { IProject } from \"./types\"\nimport { Icon } from \"..\"\n\ninterface ProjectPartialProps extends IProject {\n  toggleMode?: () => void\n  triggerDelete: () => void\n}\n\ninterface ProjectProps extends IProject {\n  trashProject: (id: number) => void\n  updateProject: <T>(payload: T) => void\n}\n\nconst ProjectHeader: React.FC<\n  Pick<IProject, \"title\" | \"backgroundImage\" | \"logo\">\n> = ({ backgroundImage, logo, title }) => {\n  return (\n    <div className=\"projectHeader\">\n      <div\n        className=\"banner\"\n        style={{\n          backgroundImage: `url(${backgroundImage})`,\n        }}\n      >\n        {logo && (\n          <div className=\"logo\">\n            <img src={logo} alt={title} />\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nconst ProjectFooter: React.FC<Pick<ProjectPartialProps, \"triggerDelete\">> = ({\n  triggerDelete,\n}) => {\n  return (\n    <div className=\"projectFooter\">\n      <div className=\"actions\">\n        <div className=\"trash\" onClick={triggerDelete}>\n          <Icon name=\"trash\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport const Project: React.FC<ProjectProps> = (props) => {\n  const [editing, setEditing] = useState<Boolean>(false)\n  const {\n    id,\n    title,\n    industry,\n    description,\n    trashProject,\n    updateProject,\n    role,\n    backgroundImage,\n    logo,\n  } = props\n\n  const handleSaveChange = (fieldName: string, e: React.FocusEvent) => {\n    const value = e.target.textContent\n    updateProject({\n      id,\n      [fieldName]: value,\n    })\n    setEditing(false)\n  }\n\n  return (\n    <div className=\"projectCard\">\n      <ProjectHeader\n        logo={logo}\n        backgroundImage={backgroundImage}\n        title={title}\n      />\n      <div className={`details ${editing ? \"editing\" : \"\"}`}>\n        <div\n          className=\"editModeToggle\"\n          onClick={() => !editing && setEditing(true)}\n        >\n          <h3\n            className=\"editable\"\n            onBlur={(e) => handleSaveChange(\"title\", e)}\n            suppressContentEditableWarning={!!editing}\n            contentEditable={!!editing}\n          >\n            {title}\n          </h3>\n          <h6\n            className=\"editable industry\"\n            onBlur={(e) => handleSaveChange(\"industry\", e)}\n            suppressContentEditableWarning={!!editing}\n            contentEditable={!!editing}\n          >\n            {industry}\n          </h6>\n          <p\n            className=\"description editable\"\n            onBlur={(e) => handleSaveChange(\"description\", e)}\n            suppressContentEditableWarning={!!editing}\n            contentEditable={!!editing}\n          >\n            {description}\n          </p>\n          <div className=\"role\">\n            <Icon name=\"case\" />\n            <span\n              className=\"editable\"\n              onBlur={(e) => handleSaveChange(\"role\", e)}\n              suppressContentEditableWarning={!!editing}\n              contentEditable={!!editing}\n            >\n              {role}\n            </span>\n          </div>\n        </div>\n        <ProjectFooter triggerDelete={() => trashProject(id)} />\n      </div>\n    </div>\n  )\n}\n","import React from \"react\";\n\nexport default function SvgComponent() {\n  return (\n    <svg fill=\"none\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M8 8v0a4 4 0 014-4v0a4 4 0 014 4v0m-8 5h8\"\n        opacity=\".6\"\n        stroke=\"#62646A\"\n        strokeLinecap=\"round\"\n        strokeWidth=\"2\"\n      />\n      <path\n        d=\"M18 8H6a2 2 0 00-2 2v8a2 2 0 002 2h12a2 2 0 002-2v-8a2 2 0 00-2-2z\"\n        stroke=\"#62646A\"\n        strokeWidth=\"2\"\n      />\n    </svg>\n  );\n}\n","import React from \"react\"\n\nexport default function SvgComponent() {\n  return (\n    <svg fill=\"none\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M5 9h14v9a4 4 0 01-4 4H9a4 4 0 01-4-4V9z\"\n        stroke=\"#F63131\"\n        strokeLinecap=\"round\"\n        strokeWidth=\"2\"\n      />\n      <path\n        d=\"M3 5h6m12 0h-6m0 0v0a3 3 0 00-3-3v0a3 3 0 00-3 3v0m6 0H9m1 8v5m4-5v5\"\n        opacity=\".6\"\n        stroke=\"#F63131\"\n        strokeLinecap=\"round\"\n        strokeWidth=\"2\"\n      />\n    </svg>\n  )\n}\n","import React from \"react\"\nimport Case from \"./icons/case\"\nimport Trash from \"./icons/trash\"\n\nexport const Icon: React.FC<{ name: string }> = ({ name }) => {\n  const icons: Record<string, React.FC> = {\n    case: Case,\n    trash: Trash,\n  }\n  const El = icons[name] || <></>\n\n  return (\n    <div className=\"Icon\">\n      <El />\n    </div>\n  )\n}\n","import React from \"react\"\nimport { ProjectList } from \"./components\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ProjectList />\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./styles/main.scss\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport { RootStoreProvider } from \"./RootStoreContext\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <RootStoreProvider>\n      <App />\n    </RootStoreProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}